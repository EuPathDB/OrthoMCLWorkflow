<workflowGraph name="">
  <param name="parentDataDir"/>
  <param name="outputGoodProteinsFile"/>
  <param name="oldReleasesSequenceFilesDir"/>
  <param name="oldReleasesGroupFilesDir"/>

  <constant name="dataDir">$$parentDataDir$$/getCoreProteins</constant>
  <constant name="proteomesDir">$$dataDir$$/coreProteomes</constant>
  <constant name="proteomeDatasetsDir">$$dataDir$$/proteomeDatasets</constant>
  <constant name="ecMappingsDir">$$dataDir$$/ecMappings</constant>

  <step name="makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$dataDir$$</paramValue>
  </step>

  <step name="mirrorDataDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <step name="makeProteomesDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$proteomesDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <step name="makeProteomeDatasetsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$proteomeDatasetsDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <step name="makeEcMappingsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$ecMappingsDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <datasetTemplate class="orthomclManualDeliveryProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
      <depends name="makeProteomeDatasetsDir"/>
    </subgraph>
  </datasetTemplate>

  <datasetTemplate class="orthomclEuPathProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
      <depends name="makeProteomeDatasetsDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>
  </datasetTemplate>

  <datasetTemplate class="orthomclEuPathEcForCore">
    <prop name="abbrev"/>
    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Eupath_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$ecMappingsDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
      <depends name="${abbrev}_insertAliases"/>
    </subgraph>
  </datasetTemplate>

  <datasetTemplate class="orthomclVectorbaseProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
      <depends name="makeProteomeDatasetsDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>

  <datasetTemplate class="orthomclVectorbaseEcForCore">
    <prop name="abbrev"/>
    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Vectorbase_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$ecMappingsDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
      <depends name="${abbrev}_insertAliases"/>
    </subgraph>
  </datasetTemplate>


  <datasetTemplate class="orthomclUniprotReferenceProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
      <depends name="makeProteomeDatasetsDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>


  <datasetTemplate class="orthomclUniprotProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
      <depends name="makeProteomeDatasetsDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>

  <datasetTemplate class="orthomclUniprotEcForCore">
    <prop name="abbrev"/>
    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Uniprot_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$ecMappingsDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
      <depends name="${abbrev}_insertAliases"/>
    </subgraph>
  </datasetTemplate>


  <step name="makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteins">
    <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
    <paramValue name="outputGoodProteinsFile">$$outputGoodProteinsFile$$</paramValue>
    <paramValue name="outputBadProteinsFile">$$dataDir$$/bad.fasta</paramValue>
    <paramValue name="minLength">10</paramValue>
    <paramValue name="maxStopPercent">20</paramValue>
    <dependsPattern name="*_proteome"/>
  </step>

  <step name="mirrorProteinsToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$outputGoodProteinsFile$$</paramValue>
    <depends name="mirrorDataDirToCluster"/>
    <depends name="makeGoodProteinsFile"/>
  </step>

</workflowGraph>
