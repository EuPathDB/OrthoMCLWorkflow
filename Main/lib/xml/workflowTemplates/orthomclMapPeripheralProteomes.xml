<workflowGraph name="">
  <param name="parentDataDir"/>
  <param name="referenceGoodProteinsFile"/>
  <param name="referenceGroupsFile"/>
  <param name="outputGroupsFile"/>
  <param name="oldReleasesSequenceFilesDir"/>
  <param name="oldReleasesGroupFilesDir"/>

  <constant name="dataDir">$$parentDataDir$$/mapPeripherals</constant>
  <constant name="proteomesDir">$$dataDir$$/proteomes</constant>
  <constant name="goodProteinsFile">$$dataDir$$/goodProteins</constant>

  <step name="makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$dataDir$$</paramValue>
  </step>

  <step name="mirrorDataDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <step name="makeProteomesDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$proteomesDir$$</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <datasetTemplate class="manualDeliveryPeripheralProteome">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$/</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
    </subgraph>
  </datasetTemplate>

  <datasetTemplate class="orthomclEuPathPeripheralProteome">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$/</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$/</paramValue>
      <depends name="makeProteomesDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$dataDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>

  <datasetTemplate class="orthomclUniprotPeripheralProteome">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>
    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$/</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeProteomesDir"/>
    </subgraph>

    <!-- a bit of a hack.  reach into the proteome dataset's dir to find the aliases file provided by the Eupath proteome dataset class -->
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$dataDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>

  <datasetTemplate class="peripheralProteomeEupathDB_EC">
    <prop name="abbrev"/>

    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Eupath_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <depends name="${abbrev}_proteome"/>
    </subgraph>
  </datasetTemplate>

  <datasetTemplate class="peripheralProteomeUniprotEC">
    <prop name="abbrev"/>

    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Uniprot_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$dataDir$$</paramValue>
      <depends name="${abbrev}_proteome"/>
    </subgraph>
  </datasetTemplate>

  <step name="makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteins">
    <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
    <paramValue name="outputGoodProteinsFile">$$goodProteinsFile$$</paramValue>
    <paramValue name="outputBadProteinsFile">bad.fasta</paramValue>
    <paramValue name="minLength">10</paramValue>
    <paramValue name="maxStopPercent">20</paramValue>
    <dependsPattern name="*_proteome"/>
  </step>

  <subgraph name="interproScan" xmlFile="interpro.xml">
    <paramValue name="proteinsFile">$$goodProteinsFile$$</paramValue>
    <paramValue name="parentDataDir">$$dataDir$$</paramValue>
    <depends name="mirrorDataDirToCluster"/>    
    <depends name="makeGoodProteinsFile"/>
  </subgraph>

  <step name="mirrorProteinsToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$goodProteinsFile$$</paramValue>
    <depends name="makeGoodProteinsFile"/>
  </step>

  <subgraph name="blast" xmlFile="blast.xml">
    <paramValue name="parentDataDir">$$dataDir$$</paramValue>
    <paramValue name="nickName">blast</paramValue>
    <paramValue name="queryFile">$$goodProteinsFile$$</paramValue>
    <paramValue name="subjectFile">$$referenceGoodProteinsFile$$</paramValue>
    <paramValue name="blastArgs">-F 'm S' -v 100000 -b 100000 -Y 1300000 -e 1e-5</paramValue>
    <paramValue name="idRegex">(\\S+)</paramValue>
    <paramValue name="blastType">blastp</paramValue>
    <paramValue name="vendor">ncbi</paramValue>
    <paramValue name="loadSubjectSubset">false</paramValue>
    <paramValue name="filterByTaxon">false</paramValue>
    <paramValue name="maxMemoryGigs">10</paramValue>
    <paramValue name="loadSimilarities">false</paramValue>
    <paramValue name="makeSimSeqsFile">true</paramValue>

    <!-- parameters below are not relevant for us -->
    <paramValue name="queryTable"></paramValue>
    <paramValue name="queryExtDbName"></paramValue>
    <paramValue name="subjectTable"></paramValue>
    <paramValue name="subjectExtDbName"></paramValue>
    <paramValue name="shortenSubjectSourceIdTo"></paramValue>
    <paramValue name="taxonHierarchyForFilter"></paramValue>
    <paramValue name="loadOptions"></paramValue>
    <depends name="mirrorProteinsToCluster"/>
    <depends name="mirrorDataDirToCluster"/>
  </subgraph>

  <step name="installSchema" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InstallOrthomclSchema">
    <paramValue name="configFile">$$dataDir$$/orthomclPairs.config</paramValue>
    <paramValue name="suffix">Peripheral</paramValue>
    <depends name="makeDataDir"/>
  </step>

  <!-- load BLAST results into SimilarSequences table -->
  <step name="loadBlast" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::LoadBlastWithSqlldr">
    <paramValue name="inputFile">$$dataDir$$/blast/master/mainresult/blastSimilarity.out</paramValue>
    <paramValue name="suffix">Peripheral</paramValue>
    <depends name="installSchema"/>
    <depends name="blast"/>
  </step>

  <step name="mapPeripheralsToGroups" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MapPeripheralsToGroups">
    <paramValue name="inputReferenceGroupsFile">$$referenceGroupsFile$$</paramValue>
    <paramValue name="inputSimilarSequencesTable">ApiDB.SimilarSequencesPeripheral</paramValue>
    <paramValue name="outputGroupsFile">$$dataDir$$/referenceAndMappedGroupsFile</paramValue>
    <paramValue name="outputResidualsFile">$$dataDir$$/initialResiduals.fasta</paramValue>
    <depends name="blast"/>
  </step>

  <!-- add peripheral proteins that did not match any representatives to the residuals file -->
  <step name="addOrphansToResiduals" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::AddOrphansToResiduals">
    <paramValue name="inputGroupsFile">$$dataDir$$/referenceAndMappedGroupsFile</paramValue>
    <paramValue name="inputProteinsFile">$$goodProteinsFile$$</paramValue>
    <paramValue name="inputResidualsFile">$$dataDir$$/initialResiduals.fasta</paramValue>
    <paramValue name="outputResidualsFile">$$dataDir$$/finalResiduals.fasta</paramValue>
    <depends name="mapPeripheralsToGroups"/>
  </step>

  <!-- NEEDS WORK -->
  <subgraph name="makeGroupsFromResiduals" xmlFile="makeOrthologGroups.xml">
    <paramValue name="parentDataDir">$$dataDir$$</paramValue>
    <paramValue name="inputProteinFile">$$dataDir$$/finalResiduals.fasta</paramValue>
    <paramValue name="inputTaxaDir">dontcare</paramValue>
    <paramValue name="outputGroupsDir">$$dataDir$$/residualsGroup</paramValue>
    <paramValue name="suffix">Residuals</paramValue>
    <paramValue name="useExistingSimSeqs">false</paramValue>
    <paramValue name="collapseClades">false</paramValue>
    <paramValue name="includeSingletonGroups">false</paramValue>
    <paramValue name="groupIdPrefix">PREFIX_</paramValue>
    <paramValue name="groupIdStart">1</paramValue>
    <depends name="addOrphansToResiduals"/>
  </subgraph>
  
  <step name="combineGroupFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::CombineGroupFiles">
    <paramValue name="mappedGroupsFile">$$dataDir$$/referenceAndMappedGroupsFile</paramValue>
    <paramValue name="residualsGroupsFile">$$dataDir$$/residualsGroup/orthomclGroups.txt</paramValue>
    <paramValue name="outputGroupsFile">$$outputGroupsFile$$</paramValue>
    <depends name="makeGroupsFromResiduals"/>
  </step>


</workflowGraph>
