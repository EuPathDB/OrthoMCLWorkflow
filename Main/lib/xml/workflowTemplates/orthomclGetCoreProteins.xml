<workflowGraph name="">
  <param name="parentDataDir"/>
  <param name="coreProteinsDir"/>
  <param name="oldReleasesSequenceFilesDir"/>
  <param name="oldReleasesGroupFilesDir"/>

  <constant name="dataDir">$$parentDataDir$$/$$coreProteinsDir$$</constant>
  <constant name="proteomesDir">$$dataDir$$/coreProteomes</constant>
  <constant name="proteomeDatasetsDir">$$dataDir$$/proteomeDatasets</constant>
  <constant name="ecMappingsDir">$$dataDir$$/ecMappings</constant>
  <constant name="coreInterproDir">$$parentDataDir$$/coreInterpro</constant>

  <step name="makeCoreProteinsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$dataDir$$</paramValue>
  </step>

  <step name="mirrorDataDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$</paramValue>
    <depends name="makeCoreProteinsDir"/>
  </step>

  <step name="makeProteomesDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$proteomesDir$$</paramValue>
    <depends name="mirrorDataDirToCluster"/>
  </step>

  <step name="mirrorProteomesDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$proteomesDir$$</paramValue>
    <depends name="makeProteomesDir"/>
  </step>

  <step name="makeProteomeDatasetsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$proteomeDatasetsDir$$</paramValue>
    <depends name="mirrorProteomesDirToCluster"/>
  </step>

  <step name="mirrorProteomeDatasetsDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$proteomeDatasetsDir$$</paramValue>
    <depends name="makeProteomeDatasetsDir"/>
  </step>

  <step name="makeEcMappingsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$ecMappingsDir$$</paramValue>
    <depends name="mirrorProteomeDatasetsDirToCluster"/>
  </step>

  <datasetTemplate class="orthomclCoreFromVEuPathEBI">
    <prop name="projectName"/>
    <prop name="ebiOrganismName"/>
    <prop name="ebiVersion"/>
    <prop name="orthomclAbbrev"/>
    <prop name="oldAbbrevsList"/>
    <prop name="orthomclClade"/>
    <prop name="ncbiTaxonId"/>
    <prop name="organismName"/>
    <prop name="ebi2gusTag"/>
<!--
    <step name="${orthomclAbbrev}_insertTaxon" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertCoreTaxonNameVersion">
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="orthomclClade">${orthomclClade}</paramValue> 
      <paramValue name="ncbiTaxonId">${ncbiTaxonId}</paramValue>
      <paramValue name="version">${ebiVersion}</paramValue>
      <paramValue name="organismName">${organismName}</paramValue>
      <depends name="makeEcMappingsDir"/>
    </step>
-->
<!--
    <step name="${orthomclAbbrev}_validateTaxon" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::ValidateNcbiTaxonId">
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="ncbiTaxonId">${ncbiTaxonId}</paramValue>
      <depends name="${orthomclAbbrev}_insertTaxon"/>
    </step>
    -->
<!--
    <subgraph name="${orthomclAbbrev}_loadCoreDataset" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <depends name="${orthomclAbbrev}_insertTaxon"/>
    </subgraph>
    
    <step name="${orthomclAbbrev}_mapPreviousSeqIDs" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MapAndInsertPrevSeqIDs">
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="inputDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <depends name="${orthomclAbbrev}_loadCoreDataset"/>
    </step>

    <step name="${orthomclAbbrev}_mapPreviousGroupIDs" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MapAndInsertPrevGroupIDs">
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="inputDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <depends name="${orthomclAbbrev}_mapPreviousSeqIDs"/>
    </step>
-->
<!--
    <subgraph name="${orthomclAbbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
    </subgraph>    
    -->
    <step name="${orthomclAbbrev}_makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
      <paramValue name="dataDir">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
      <depends name="makeEcMappingsDir"/>
    </step>

    <step name="${orthomclAbbrev}_runOrthoEbiDumper" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::RunOrthoEbiDumper" stepLoadTypes="runEbiDumper">
      <paramValue name="projectName">${projectName}</paramValue>
      <paramValue name="ncbiTaxonId">${ncbiTaxonId}</paramValue>
      <paramValue name="ebiOrganismName">${ebiOrganismName}</paramValue>
      <paramValue name="orthomclAbbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="ebiVersion">${ebiVersion}</paramValue>
      <paramValue name="outputDir">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/</paramValue>
      <paramValue name="ecFileName">${orthomclAbbrev}_ecFromEbi.tab</paramValue>
      <paramValue name="proteomeFileName">${orthomclAbbrev}_.fasta</paramValue>
      <paramValue name="ebi2gusTag">${ebi2gusTag}</paramValue>
      <depends name="${orthomclAbbrev}_makeDataDir"/>
    </step>
    
    <step name="${orthomclAbbrev}_makeInterproDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$coreInterproDir$$/${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${orthomclAbbrev}_runOrthoEbiDumper"/>
    </step>
    
    <step name="${orthomclAbbrev}_findExemplarProteins" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::FindExemplarProteins" >
      <paramValue name="fastaFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}_.fasta</paramValue>
      <paramValue name="outputFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/exemplars.fasta</paramValue>
      <paramValue name="geneIdRegex">gene=(\S+)</paramValue>
      <paramValue name="proteinIdRegex">^>(\S+)</paramValue>
      <paramValue name="maxStopCodonPercent">20</paramValue>
      <paramValue name="preferredSource">sp</paramValue>
      <depends name="${orthomclAbbrev}_makeInterproDataDir"/>
    </step>

    <step name="${orthomclAbbrev}_makeAliasFile" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MakeAliasFile" >
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="firstFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}_.fasta</paramValue>
      <paramValue name="secondFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/exemplars.fasta</paramValue>
      <paramValue name="outputFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${orthomclAbbrev}_findExemplarProteins"/>
    </step>

    <step name="${orthomclAbbrev}_orgAbbrevSourceId" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::OrgAbbrevSourceId" >
      <paramValue name="abbrev">${orthomclAbbrev}</paramValue>
      <paramValue name="geneRegex">gene=(\S+)</paramValue>
      <paramValue name="inputFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/exemplars.fasta</paramValue>
      <paramValue name="outputFile">$$proteomesDir$$/${orthomclAbbrev}.fasta</paramValue>
      <depends name="${orthomclAbbrev}_makeAliasFile"/>
    </step>

    <step name="${orthomclAbbrev}_makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteinsForSample">
      <paramValue name="proteomeFile">$$proteomesDir$$/${orthomclAbbrev}.fasta</paramValue>
      <paramValue name="outputGoodProteinsFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}.fasta</paramValue>
      <paramValue name="outputBadProteinsFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}_bad.fa</paramValue>
      <paramValue name="minLength">10</paramValue>
      <paramValue name="maxStopPercent">20</paramValue>
      <depends name="${orthomclAbbrev}_orgAbbrevSourceId"/>
    </step>
<!-- 
    <step name="${orthomclAbbrev}_insertCoreSequences" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::OrthoLoadFastaSequences">
      <paramValue name="externalDatabaseName">${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="externalDatabaseVersion">${ebiVersion}</paramValue>
      <paramValue name="ncbiTaxonId">${ncbiTaxonId}</paramValue>
      <paramValue name="sequenceFile">$$proteomesDir$$/${orthomclAbbrev}.fasta</paramValue>
      <paramValue name="regexSourceId">^>\w+\|(\S+)</paramValue>
      <paramValue name="regexSecondaryId">^>(\S+)</paramValue>
      <paramValue name="regexDesc">product=(.*)</paramValue>
      <paramValue name="regexName">gene=(\S*)</paramValue>
      <paramValue name="tableName">DoTS::ExternalAASequence</paramValue>
      <depends name="${orthomclAbbrev}_makeGoodProteinsFile"/>
    </step>
-->
    <step name="${orthomclAbbrev}_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$coreInterproDir$$/${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${orthomclAbbrev}_makeGoodProteinsFile"/>
    </step>

    <step name="${orthomclAbbrev}_mirrorProteomeDatasetToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${orthomclAbbrev}_mirrorToCluster"/>
    </step>
<!--    
    <subgraph name="${orthomclAbbrev}_InterproScan" xmlFile="interpro.xml">
        <paramValue name="proteinsFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}.fasta</paramValue>
        <paramValue name="parentDataDir">$$coreInterproDir$$/${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
        <paramValue name="insertVersion">2</paramValue>
        <paramValue name="aaSeqTable">ExternalAASequence</paramValue>
        <paramValue name="sourceIdRegex">^\w+\|(\S+)</paramValue>
        <depends name="${orthomclAbbrev}_mirrorProteomeDatasetToCluster"/>
    </subgraph>
-->
<!--
    <step name="${orthomclAbbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${orthomclAbbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${orthomclAbbrev}_InterproScan"/>
    </step>

    <step name="${orthomclAbbrev}_insertEcNumbers" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InsertOrthoMCLDerivedEC">
      <paramValue name="inputFile">$$proteomeDatasetsDir$$/${orthomclAbbrev}_orthomclProteome_RSRC/${orthomclAbbrev}_ecFromEbi.tab</paramValue>
      <paramValue name="evidenceCode">EBI</paramValue>
      <paramValue name="idSql">SELECT aa_sequence_id FROM dots.externalaasequence WHERE secondary_identifier = ?</paramValue>
      <depends name="${orthomclAbbrev}_insertAliases"/>
    </step>
-->
  </datasetTemplate>

  <datasetTemplate class="orthomclEuPathProteomeForCore">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>

    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
    </subgraph>

    <step name="${abbrev}_makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_proteome"/>
    </step>

    <step name="${abbrev}_makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteinsForSample">
      <paramValue name="proteomeFile">$$proteomesDir$$/${abbrev}.fasta</paramValue>
      <paramValue name="outputGoodProteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}.fasta</paramValue>
      <paramValue name="outputBadProteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}_bad.fa</paramValue>
      <paramValue name="minLength">10</paramValue>
      <paramValue name="maxStopPercent">20</paramValue>
      <dependsPattern name="${abbrev}_makeDataDir"/>
    </step>

    <step name="${abbrev}_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_makeGoodProteinsFile"/>
    </step>

    <step name="${abbrev}_mirrorProteomeDatasetToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_mirrorToCluster"/>
    </step>

    <subgraph name="${abbrev}_InterproScan" xmlFile="interpro.xml">
        <paramValue name="proteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}.fasta</paramValue>
        <paramValue name="parentDataDir">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <paramValue name="insertVersion">2</paramValue>
        <depends name="${abbrev}_mirrorProteomeDatasetToCluster"/>
    </subgraph>

    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>

  </datasetTemplate>

  <datasetTemplate class="orthomclEuPathEcForCore">
    <prop name="abbrev"/>
    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Eupath_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$ecMappingsDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
      <depends name="${abbrev}_insertAliases"/>
    </subgraph>
  </datasetTemplate>

  <datasetTemplate class="orthomclCoreFromUniprot">
    <prop name="abbrev"/>
    <prop name="oldAbbrevsList"/>

    <subgraph name="${abbrev}_proteome" xmlFile="loadOrthomclProteome.xml">
      <paramValue name="abbrev">${abbrev}</paramValue>
      <paramValue name="oldAbbrevsList">${oldAbbrevsList}</paramValue>
      <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
      <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
      <paramValue name="parentDataDir">$$proteomeDatasetsDir$$</paramValue>
      <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
    </subgraph>

    <step name="${abbrev}_makeDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
        <paramValue name="dataDir">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_proteome"/>
    </step>

    <step name="${abbrev}_makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteinsForSample">
      <paramValue name="proteomeFile">$$proteomesDir$$/${abbrev}.fasta</paramValue>
      <paramValue name="outputGoodProteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}.fasta</paramValue>
      <paramValue name="outputBadProteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}_bad.fa</paramValue>
      <paramValue name="minLength">10</paramValue>
      <paramValue name="maxStopPercent">20</paramValue>
      <dependsPattern name="${abbrev}_makeDataDir"/>
    </step>

    <step name="${abbrev}_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_makeGoodProteinsFile"/>
    </step>

    <step name="${abbrev}_mirrorProteomeDatasetToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" stepLoadTypes="toCluster">
        <paramValue name="fileOrDirToMirror">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <depends name="${abbrev}_mirrorToCluster"/>
    </step>
<!--
    <subgraph name="${abbrev}_InterproScan" xmlFile="interpro.xml">
        <paramValue name="proteinsFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/${abbrev}.fasta</paramValue>
        <paramValue name="parentDataDir">$$coreInterproDir$$/${abbrev}_orthomclProteome_RSRC</paramValue>
        <paramValue name="insertVersion">2</paramValue>
        <paramValue name="aaSeqTable">ExternalAASequence</paramValue>
        <paramValue name="sourceIdRegex">^\w+\|(\S+)</paramValue>
        <depends name="${abbrev}_mirrorProteomeDatasetToCluster"/>
    </subgraph>
-->
<!--
    <step name="${abbrev}_insertAliases" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertAliases">
      <paramValue name="externalDatabase">${abbrev}_orthomclProteome_RSRC</paramValue>
      <paramValue name="inputMappingFile">$$proteomeDatasetsDir$$/${abbrev}_orthomclProteome_RSRC/aliases.tab</paramValue>
      <depends name="${abbrev}_proteome"/>
    </step>
-->
  </datasetTemplate>

  <datasetTemplate class="orthomclCoreFromUniprotEC">
    <prop name="abbrev"/>
    <subgraph name="${abbrev}_enzymes" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${abbrev}_Uniprot_ECAssociations_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$ecMappingsDir$$</paramValue>
      <depends name="makeEcMappingsDir"/>
      <depends name="${abbrev}_insertAliases"/>
    </subgraph>
  </datasetTemplate>

  <step name="makeProteomeInputDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$dataDir$$/fastas</paramValue>
    <dependsPattern name="*_makeGoodProteinsFile"/>
  </step>

  <step name="MakeOrthofinderInputDir" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MakeOrthofinderInputDir">
    <paramValue name="proteomesDir">$$proteomesDir$$</paramValue>
    <paramValue name="outputDir">$$dataDir$$</paramValue>
    <depends name="makeProteomeInputDir"/>
  </step>

  <step name="mirrorProteinsToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$dataDir$$/fastas.tar.gz</paramValue>
    <depends name="MakeOrthofinderInputDir"/>
  </step>

</workflowGraph>
