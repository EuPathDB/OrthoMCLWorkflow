<workflowGraph name="">
  <param name="projectVersionForWebsiteFiles"/>

  <constant name="projectName">OrthoMCL</constant>
  <constant name="relativeWebServicesDir">webServices/$$projectName$$/release-$$projectVersionForWebsiteFiles$$</constant>
  <constant name="relativeDownloadSiteDir">downloadSite/$$projectName$$/release-$$projectVersionForWebsiteFiles$$/</constant>

  <constant name="oldReleasesSequenceFilesDir">oldReleasesSeqFiles</constant>
  <constant name="oldReleasesGroupFilesDir">oldReleasesGroupFiles</constant>

  <constant name="globalDatasetLoaderXmlFile">global.xml</constant>
  <constant name="globalDataDir">global</constant>

  <!-- we want all steps in the flow to depend on this one because it validates the project name and version -->
  <step name="initUserGroupProject" 
	stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InitUserGroupProject">
    <paramValue name="projectName">$$projectName$$</paramValue>
  </step>

  <step name="makeGlobalDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$globalDataDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <subgraph name="SequenceOntoloty" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">SO_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="taxonomy" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">taxonomy_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="interproscanData" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">InterproscanData_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="enzymeDB" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">enzymeDB_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <!-- load the OrthomclTaxon table with our tree of life -->
  <subgraph name="orthomclCla
des" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">orthomclClades_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
    <paramValue name="parentDataDir"></paramValue>
    <depends name="taxonomy"/>
  </subgraph>

  <step name="getOldReleaseSeqFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::GetOldReleasesSequenceFiles">
    <paramValue name="inputDir">@@liveDownloadSite@@/$$projectName$$</paramValue>
    <paramValue name="outputDir">$$oldReleasesSequenceFilesDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>  

  <step name="getOldReleaseGroupFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::GetOldReleasesGroupFiles">
    <paramValue name="inputDir">@@liveDownloadSite@@/$$projectName$$</paramValue>
    <paramValue name="outputDir">$$oldReleasesGroupFilesDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>  

  <subgraph name="getRefProteomesAndMakeRefGroups" xmlFile="orthomclMakeReferenceGroups.xml">
    <paramValue name="parentDataDir"></paramValue>
    <paramValue name="outputGoodProteinsFile">referenceGood.fasta</paramValue>
    <depends name="taxonomy"/>
    <depends name="SequenceOntology"/>
  </subgraph>

  <subgraph name="getAndMapPeriphProteomes" xmlFile="orthomclMapPeripheralProteomes.xml">
    <paramValue name="parentDataDir"></paramValue>
    <paramValue name="outputGoodProteinsFile">periphGood.fasta</paramValue>
    <depends name="getRefProteomesAndMakeRefGroups"/>
  </subgraph>

  <step name="makeRefInterproDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">refInterpro</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <subgraph name="interproScanReferenceProteins" xmlFile="interpro.xml">
    <paramValue name="proteinsFile">referenceGood.fasta</paramValue>
    <paramValue name="parentDataDir">refInterpro</paramValue>
    <depends name="getRefProteomesAndMakeRefGroups"/>
    <depends name="interproscanData"/>
  </subgraph>

  <step name="makePeriphInterproDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">periphInterpro</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <subgraph name="interproScanPeriphProteins" xmlFile="interpro.xml">
    <paramValue name="proteinsFile">periphGood.fasta</paramValue>
    <paramValue name="parentDataDir">periphInterpro</paramValue>
    <depends name="getAndMapPeriphProteomes"/>
    <depends name="interproscanData"/>
  </subgraph>

  <step name="concatGoodProteins" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CatTwoFiles">
    <paramValue name="inputFile1">referenceGood.fasta</paramValue>
    <paramValue name="inputFile2">periphGood.fasta</paramValue>
    <paramValue name="outputFile">good.fasta</paramValue>
    <depends name="getRefProteomesAndMakeRefGroups"/>
    <depends name="getAndMapPeriphProteomes"/>
  </step>

  <step name="UpdateGroupStatistics" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::UpdateGroupStatistics">
    <depends name="getRefProteomesAndMakeRefGroups"/>
    <depends name="getAndMapPeriphProteomes"/>
  </step>

  <subgraph name="EcAssignments" xmlFile="makeOrthomclEcAssignments.xml">
    <paramValue name="inputProteinFile">good.fasta</paramValue>
    <paramValue name="parentDataDir"></paramValue>
    <depends name="concatGoodProteins"/>
  </subgraph>

  <step name="makeDownloadSiteDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InitSiteDir">
    <paramValue name="relativeDir">$$relativeDownloadSiteDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <step name="makeWebServicesDir" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InitSiteDir">
    <paramValue name="relativeDir">$$relativeWebServicesDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <!--  TODO:  NEEDS TO MAKE A FILE OF SINGLETONS -->
  <step name="makeDownloadFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MakeDownloadFiles">
    <paramValue name="relativeDownloadSiteDir">$$relativeDownloadSiteDir$$</paramValue>
    <paramValue name="release">$$projectVersionForWebsiteFiles$$</paramValue>
    <paramValue name="project">$$projectName$$</paramValue>
    <paramValue name="inputGroupsDir">groupsOutput</paramValue>
    <depends name="insertGroups"/>
    <depends name="makeDownloadSiteDir"/>
  </step>

  <step name="makeInterproDownloadFile" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MakeInterproDownloadFile">
    <paramValue name="downloadSiteDir">$$relativeDownloadSiteDir$$</paramValue>
    <paramValue name="release">$$projectVersionForWebsiteFiles$$</paramValue>
    <paramValue name="project">$$projectName$$</paramValue>
    <paramValue name="interproExtDbName">InterproscanData_RSRC</paramValue>
    <depends name="interproScan"/>
    <depends name="makeDownloadSiteDir"/>
  </step>

  <!-- extract files for MSA -->
  <step name="extractGroupFastaFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::ExtractFilesForMsa">
    <paramValue name="outputDir">tarredGroupFastaFilesDir</paramValue>
    <paramValue name="filesPerTarball">500</paramValue>
    <depends name="insertGroups"/>
  </step>

  <step name="mirrorGroupFastaFilesToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">tarredGroupFastaFilesDir</paramValue>
    <depends name="extractGroupFastaFiles"/>
    <depends name="initClusterHomeDir"/>
  </step>

  <!-- run MSA -->
  <subgraph name="muscleMsa" xmlFile="muscleMSA.xml">
    <paramValue name="fastaFilesDir">tarredGroupFastaFilesDir</paramValue>
    <paramValue name="dataDir">muscleMSA</paramValue>
    <depends name="mirrorGroupFastaFilesToCluster"/>
  </subgraph>
  
  <step name="insertMsa" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertGroupMsa" stepLoadTypes="plugin">
    <paramValue name="inputDir">muscleMSA/master/mainresult</paramValue>
    <paramValue name="dataDir">muscleMSA</paramValue>
    <depends name="muscleMsa"/>
  </step>

  <!-- run biolayout -->

  <!-- load GroupTaxonMatrix (phyletic pattern) -->
  <step name="insertGroupTaxonMatrix" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertGroupTaxonMatrix">
    <depends name="insertGroups"/>
  </step>

  <!-- make web services dir -->
  <step name="webServiceBlastFile" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::MakeWebservicesBlastFile">
    <paramValue name="downloadSiteDir">$$relativeDownloadSiteDir$$</paramValue>
    <paramValue name="webServicesDir">$$relativeWebServicesDir$$</paramValue>
    <paramValue name="project">$$projectName$$</paramValue>
    <paramValue name="release">$$projectVersionForWebsiteFiles$$</paramValue>
    <depends name="makeWebServicesDir"/>
    <depends name="makeDownloadFiles"/>
  </step>

  <!-- domain keywords -->
  <step name="insertDomainKeywords" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertDomainKeywords">
    <depends name="insertGroups"/>
    <depends name="interpro"/>
  </step>

  <!-- description keywords -->
  <step name="insertProteinKeywords" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertProteinKeywords">
    <depends name="insertGroups"/>
  </step>


</workflowGraph>
