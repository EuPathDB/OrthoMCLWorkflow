<workflowGraph name="">
  <param name="projectVersionForWebsiteFiles"/>
  <param name="groupIdPrefix"/>
  <param name="groupIdStart"/>
<!--  projectName should be changed, was orthoMCL -->
  <constant name="projectName">OrthoMCL</constant>
  <constant name="relativeWebServicesDir">webServices/$$projectName$$/release-$$projectVersionForWebsiteFiles$$</constant>
  <constant name="relativeDownloadSiteDir">downloadSite/$$projectName$$/release-$$projectVersionForWebsiteFiles$$/</constant>

  <constant name="oldReleasesSequenceFilesDir">oldReleasesSeqFiles</constant>
  <constant name="oldReleasesGroupFilesDir">oldReleasesGroupFiles</constant>
  <constant name="globalDatasetLoaderXmlFile">global.xml</constant>
  <constant name="globalDataDir">global</constant>


  <constant name="groupsSelfBlastDir">groupsSelfBlast</constant>
  <constant name="coreGroupsDir">coreGroups</constant>

  <!-- we want all steps in the flow to depend on this one because it validates the project name and version -->
  <step name="initUserGroupProject" 
	stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InitUserGroupProject">
    <paramValue name="projectName">$$projectName$$</paramValue>
  </step>

  <step name="initClusterHomeDir"
        stepClass="ReFlow::StepClasses::InitClusterHomeDir">
  </step>


  <step name="makeGlobalDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$globalDataDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>

  <step name="installSchema" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InstallOrthomclSchema">
    <paramValue name="configFile">orthomclPairs.config</paramValue>
    <paramValue name="suffix"></paramValue>
  </step>


  <subgraph name="SequenceOntology" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">SO_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="taxonomy" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">taxonomy_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="interproscanData" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">InterproscanData_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="geneOntology" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">GO_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="geneOntologyEvidenceCodes" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">GO_evidence_codes_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <subgraph name="enzymeDB" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">enzymeDB_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">$$globalDatasetLoaderXmlFile$$</paramValue>
    <paramValue name="parentDataDir">$$globalDataDir$$</paramValue>
    <depends name="makeGlobalDataDir"/>
  </subgraph>

  <!-- load the OrthomclTaxon table with our tree of life -->
 
  <subgraph name="orthomclClades" xmlFile="loadDataset.xml">
    <paramValue name="datasetName">orthomclClades_RSRC</paramValue>
    <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
    <paramValue name="parentDataDir"></paramValue>
    <depends name="taxonomy"/>
  </subgraph>

  <step name="getOldReleaseSeqFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::GetOldReleasesSequenceFiles">
    <paramValue name="inputDir">@@liveDownloadSite@@/$$projectName$$</paramValue>
    <paramValue name="outputDir">$$oldReleasesSequenceFilesDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>  

  <step name="getOldReleaseGroupFiles" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::GetOldReleasesGroupFiles">
    <paramValue name="inputDir">@@liveDownloadSite@@/$$projectName$$</paramValue>
    <paramValue name="outputDir">$$oldReleasesGroupFilesDir$$</paramValue>
    <depends name="initUserGroupProject"/>
  </step>  

  <subgraph name="getCoreProteomes" xmlFile="generated/OrthoMCL/orthomclGetCoreProteins.xml">
    <paramValue name="parentDataDir"></paramValue>
    <paramValue name="outputGoodProteinsFile">coreGood.fasta</paramValue>
    <paramValue name="oldReleasesSequenceFilesDir">$$oldReleasesSequenceFilesDir$$</paramValue>
    <paramValue name="oldReleasesGroupFilesDir">$$oldReleasesGroupFilesDir$$</paramValue>
    <depends name="orthomclClades"/>
    <depends name="getOldReleaseSeqFiles"/>
    <depends name="getOldReleaseGroupFiles"/>
    <depends name="SequenceOntology"/>
    <depends name="geneOntology"/>
    <depends name="geneOntologyEvidenceCodes"/>
    <depends name="initClusterHomeDir"/>
    <depends name="enzymeDB"/>
  </subgraph>

  <step name="makeCoreInterproDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">coreInterpro</paramValue>
  </step>

  <step name="mirrorCoreInterproDirToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">coreInterpro</paramValue>
    <depends name="makeCoreInterproDir"/>
  </step>
  
  <subgraph name="coreInterproScan" xmlFile="interpro.xml">
    <paramValue name="proteinsFile">coreGood.fasta</paramValue>
    <paramValue name="parentDataDir">coreInterpro</paramValue>
    <paramValue name="insertVersion">2</paramValue>
    <paramValue name="aaSeqTable">ExternalAASequence</paramValue>
    <paramValue name="sourceIdRegex">^\w+\|(\S+)</paramValue>
    <depends name="interproscanData"/>
    <depends name="getCoreProteomes"/>    
    <depends name="mirrorCoreInterproDirToCluster"/>    
  </subgraph>

<!-- ecMappings put into orthomclGetCoreProteins.xml

  <subgraph name="ecMappings" xmlFile="generated/OrthoMCL/orthomclEcMappings.xml">
    <paramValue name="parentDataDir"></paramValue>
    <depends name="enzymeDB"/>
    <depends name="getCoreProteomes"/>
  </subgraph>

-->


  <subgraph name="makeCoreGroups" xmlFile="makeOrthologGroups.xml">
    <paramValue name="parentDataDir"></paramValue>
    <paramValue name="inputProteinFile">coreGood.fasta</paramValue>
    <paramValue name="inputTaxaDir">dontcare</paramValue>
    <paramValue name="outputGroupsDir">$$coreGroupsDir$$</paramValue>
    <paramValue name="suffix">Core</paramValue>
    <paramValue name="useExistingSimSeqs">false</paramValue>
    <paramValue name="collapseClades">false</paramValue>
    <paramValue name="includeSingletonGroups">true</paramValue>
    <paramValue name="groupIdPrefix">$$groupIdPrefix$$</paramValue>
    <paramValue name="groupIdStart">$$groupIdStart$$</paramValue>
    <depends name="getCoreProteomes"/>
  </subgraph>


  <step name="insertGroups" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::InsertGroups">
    <paramValue name="inputGroupsFile">$$coreGroupsDir$$/orthomclGroups.txt</paramValue>
    <depends name="makeCoreGroups"/>
  </step>

  <step name="makeGroupsSelfBlastDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$groupsSelfBlastDir$$</paramValue>
  </step>

  <step name="extractGroupFastas" stepClass="OrthoMCLWorkflow::Main::WorkflowSteps::ExtractGroupFasta">
    <paramValue name="outputDir">$$groupsSelfBlastDir$$/groupFastas</paramValue>
    <paramValue name="tarAndZip">true</paramValue>
    <paramValue name="peripheralsOnly">false</paramValue>
    <depends name="insertGroups"/>
    <depends name="makeGroupsSelfBlastDir"/>
  </step>

  <step name="mirrorGroupFastasToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$groupsSelfBlastDir$$</paramValue>
    <depends name="extractGroupFastas"/>
  </step>

  <subgraph name="groupsSelfBlast" xmlFile="multiBlast.xml">
    <paramValue name="parentDataDir">$$groupsSelfBlastDir$$</paramValue>
    <paramValue name="nickName">blast</paramValue>
    <paramValue name="fastaDirTarFile">$$groupsSelfBlastDir$$/groupFastas.tar.gz</paramValue>
    <paramValue name="coreDatabaseFasta">coreGood.fasta</paramValue>
    <paramValue name="blastArgs">-F 'm S' -v 100000 -b 100000 -Y 1300000 -e 1e-5</paramValue>
    <paramValue name="idRegex">(\\S+)</paramValue>
    <paramValue name="blastType">blastp</paramValue>
    <paramValue name="vendor">ncbi</paramValue>
    <paramValue name="loadSubjectSubset">false</paramValue>
    <paramValue name="filterByTaxon">false</paramValue>
    <paramValue name="maxMemoryGigs">10</paramValue>
    <paramValue name="loadSimilarities">false</paramValue>
    <paramValue name="makeSimSeqsFile">true</paramValue>
    <depends name="extractGroupFastas"/>
    <depends name="mirrorGroupFastasToCluster"/>
  </subgraph>


  <step name="loadBlast" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::LoadBlastWithSqlldr">
    <paramValue name="inputFile">$$groupsSelfBlastDir$$/blast/master/mainresult/blastSimilarity.out</paramValue>
    <paramValue name="suffix"></paramValue>
    <paramValue name="dataDir">$$groupsSelfBlastDir$$</paramValue>
    <depends name="groupsSelfBlast"/>
    <depends name="installSchema"/>
  </step>

  <subgraph name="postProcessGroups" xmlFile="orthomclPostProcessGroups.xml">
    <paramValue name="coreGoodFasta">coreGood.fasta</paramValue>
    <paramValue name="periphGoodFasta">mapPeripherals/periphGoodProteins</paramValue>
    <paramValue name="relativeDownloadSiteDir">$$relativeDownloadSiteDir$$</paramValue>
    <paramValue name="projectVersionForWebsiteFiles">$$projectVersionForWebsiteFiles$$</paramValue>
    <depends name="loadBlast"/>
  </subgraph>


</workflowGraph>
