<workflowGraph name="makeOrthologGroups">
  <param name="parentDataDir"/>
  <param name="inputProteinFile"/>
  <param name="inputTaxaDir"/>
  <param name="outputGroupsDir"/>
  <param name="suffix"/>
  <param name="useExistingSimSeqs"/>
  <param name="collapseClades"/>  
  <param name="includeSingletonGroups"/>  
  <param name="groupIdPrefix"/>  
  <param name="groupIdStart"/>  

  <constant name="localDataDir">$$parentDataDir$$/makeGroups</constant>
  <constant name="goodProteinFile">$$localDataDir$$/protein.fa</constant>

  <!-- make a data dir  -->
  <step name="makeLocalDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$localDataDir$$</paramValue>
  </step>

  <!-- copy protein file to our data dir -->
  <!-- as a top-level graph (for development) this will fail. Copy to workflow's data dir, and set step to ready -->
  <step name="copyProteinFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::CopyDataDirFile">
    <paramValue name="fromFile">$$inputProteinFile$$</paramValue>
    <paramValue name="toFile">$$goodProteinFile$$</paramValue>
    <depends name="makeLocalDataDir"/>
  </step>

  <!-- mirror our data dir to the cluster -->
  <step name="mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" excludeIf="$$useExistingSimSeqs$$">
    <paramValue name="fileOrDirToMirror">$$localDataDir$$</paramValue>
    <depends name="copyProteinFile"/>
  </step>

  <!-- format the blast database on the cluster -->
  <step name="makeNrdbBlastDbOnCluster" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FormatBlastDbOnCluster" excludeIf="$$useExistingSimSeqs$$">
    <paramValue name="inputFile">$$goodProteinFile$$</paramValue>
    <paramValue name="vendor">ncbi</paramValue>
    <paramValue name="seqType">p</paramValue>
    <depends name="mirrorToCluster"/>
  </step>

  <subgraph name="orthoFinder" xmlFile="orthoFinder.xml" excludeIf="$$useExistingSimSeqs$$">
    <paramValue name="parentDataDir">$$localDataDir$$</paramValue>
    <paramValue name="inputFile">$$goodProteinFile$$</paramValue>
    <depends name="makeNrdbBlastDbOnCluster"/>
  </subgraph>

  <!-- create tables (SimilarSequences, Ortholog, CoOrtholog, InParalog) -->
  <!-- create config file  -->

  <step name="installSchema" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::InstallOrthomclSchema">
    <paramValue name="configFile">$$localDataDir$$/orthomclPairs.config</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <depends name="makeLocalDataDir"/>
  </step>

  <!-- load BLAST results into SimilarSequences table -->
  <step name="loadBlast" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::LoadBlastWithSqlldr" excludeIf="$$useExistingSimSeqs$$">
    <paramValue name="inputFile">$$localDataDir$$/orthoFinder/master/mainresult/diamondSimilarity.out</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <paramValue name="dataDir">$$localDataDir$$</paramValue>
    <depends name="installSchema"/>
    <depends name="orthoFinder"/>
  </step>

  <step name="importBlast" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::ImportOrthomclTestData" includeIf="$$useExistingSimSeqs$$">
    <paramValue name="taxaDir">$$inputTaxaDir$$</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <paramValue name="collapseClades">$$collapseClades$$</paramValue>
    <paramValue name="inputProteinFile">$$inputProteinFile$$</paramValue>
    <depends name="installSchema"/>
  </step>

  <!-- run the orthomclPairs program to compute pairwise relationships.  -->
  <step name="orthomclPairs" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::FindOrthomclPairs">
    <paramValue name="configFile">$$localDataDir$$/orthomclPairs.config</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <depends name="loadBlast"/>
    <depends name="importBlast"/>
  </step>

  <!-- write pairs out to a file -->
  <step name="makePairsFiles" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::MakeOrthoPairsFiles">
    <paramValue name="configFile">$$localDataDir$$/orthomclPairs.config</paramValue>
    <paramValue name="suffix">$$suffix$$</paramValue>
    <paramValue name="outputGroupsDir">$$outputGroupsDir$$</paramValue>
    <depends name="orthomclPairs"/>
  </step>

</workflowGraph>
