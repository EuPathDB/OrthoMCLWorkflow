<workflowGraph name="">

  <!-- NEEDS UPGRADE TO ADD BAD PROTEINS TO SINGLETONS !! -->

  <constant name="tierOneDir">tierOne</constant>
  <constant name="tierOneRepProteinsDir">tierOne/representativeProteomes</constant>
  <constant name="tierOneRepFirstGroupsDir">tierOne/groupsWithRepFirst</constant>
  <constant name="tierTwoDir">tierTwo</constant>

  <step name="initClusterHomeDir"
        stepClass="ReFlow::StepClasses::InitClusterHomeDir">
  </step>

  <step name="makeTierOneDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$tierOneDir$$</paramValue>
  </step>

  <step name="tierOneDir_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$tierOneDir$$</paramValue>
    <depends name="makeTierOneDir"/>
    <depends name="initClusterHomeDir"/>
  </step>

  <step name="makeRepProteinsDataDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$tierOneRepProteinsDir$$</paramValue>
    <depends name="makeTierOneDir"/>
  </step>

  <step name="makeTierOneRepFirstGroupsDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$tierOneRepFirstGroupsDir$$</paramValue>
    <depends name="makeTierOneDir"/>
  </step>

  <datasetTemplate class="orthomclClade">
    <prop name="cladeAbbrev"/>
    <prop name="ncbiTaxonId"/>
    <prop name="containsOnlyOneOrganism"/>

    <step name="${cladeAbbrev}_makeCladeDir" stepClass="ReFlow::StepClasses::MakeDataDir">
      <paramValue name="dataDir">$$tierOneDir$$/${cladeAbbrev}</paramValue>
      <depends name="makeTierOneDir"/>
    </step>

    <subgraph name="${cladeAbbrev}_clade_RSRC" xmlFile="loadDataset.xml">
      <paramValue name="datasetName">${cladeAbbrev}_orthomclClade_RSRC</paramValue>
      <paramValue name="datasetLoaderXmlFileName">OrthoMCL.xml</paramValue>
      <paramValue name="parentDataDir">$$tierOneDir$$/${cladeAbbrev}</paramValue>
      <depends name="${cladeAbbrev}_makeCladeDir"/>
    </subgraph>

    <step name="${cladeAbbrev}_makeGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteins">
      <paramValue name="proteomesDir">$$tierOneDir$$/${cladeAbbrev}/${cladeAbbrev}_orthomclClade_RSRC/final</paramValue>
      <paramValue name="outputGoodProteinsFile">$$tierOneDir$$/${cladeAbbrev}/good.fasta</paramValue>
      <paramValue name="outputBadProteinsFile">$$tierOneDir$$/${cladeAbbrev}/bad.fasta</paramValue>
      <paramValue name="minLength">10</paramValue>
      <paramValue name="maxStopPercent">20</paramValue>
      <depends name="${cladeAbbrev}_clade_RSRC"/>
    </step>

    <step name="${cladeAbbrev}_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster" excludeIf="${containsOnlyOneOrganism}">
      <paramValue name="fileOrDirToMirror">$$tierOneDir$$/${cladeAbbrev}</paramValue>
      <depends name="${cladeAbbrev}_makeCladeDir"/>
      <depends name="tierOneDir_mirrorToCluster"/>
    </step>

    <subgraph name="${cladeAbbrev}_makeGroups" xmlFile="makeOrthologGroups.xml" excludeIf="${containsOnlyOneOrganism}">
      <paramValue name="parentDataDir">$$tierOneDir$$/${cladeAbbrev}</paramValue>
      <paramValue name="inputProteinFile">$$tierOneDir$$/${cladeAbbrev}/good.fasta</paramValue>
      <paramValue name="inputTaxaDir">$$tierOneDir$$/${cladeAbbrev}/${cladeAbbrev}_orthomclClade_RSRC/final</paramValue>
      <paramValue name="outputGroupsDir">$$tierOneDir$$/${cladeAbbrev}/groupsOutput</paramValue>
      <paramValue name="suffix">${ncbiTaxonId}</paramValue>
      <paramValue name="useExistingSimSeqs">true</paramValue>
      <paramValue name="collapseClades">false</paramValue>
      <paramValue name="includeSingletonGroups">true</paramValue>
      <depends name="${cladeAbbrev}_mirrorToCluster"/>
      <depends name="${cladeAbbrev}_makeGoodProteinsFile"/>
    </subgraph>

    <!-- adds cladeAbbrev as prefix to all protein ids -->
    <step name="${cladeAbbrev}_makeRepresentativeProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeRepresentativeProteinsFile" excludeIf="${containsOnlyOneOrganism}">
      <paramValue name="inputGroupsDir">$$tierOneDir$$/${cladeAbbrev}/groupsOutput</paramValue>
      <paramValue name="inputProteinsFile">$$tierOneDir$$/${cladeAbbrev}/good.fasta</paramValue>
      <paramValue name="outputRepresentativeProteinsFile">$$tierOneRepProteinsDir$$/${ncbiTaxonId}.fasta</paramValue>
      <paramValue name="outputGroupsFile">$$tierOneRepFirstGroupsDir$$/${ncbiTaxonId}_groups.txt</paramValue>
      <paramValue name="proteinIdPrefix">${ncbiTaxonId}</paramValue>
      <depends name="makeRepProteinsDataDir"/>
      <depends name="makeTierOneRepFirstGroupsDir"/>
      <depends name="${cladeAbbrev}_makeGroups"/>
    </step>

    <!-- if clade contains only one organism add cladeAbbrev as prefix to all protein ids -->
    <step name="${cladeAbbrev}_makeOrganismProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeOrganismProteinsFile" includeIf="${containsOnlyOneOrganism}">
      <paramValue name="inputProteinsFile">$$tierOneDir$$/${cladeAbbrev}/good.fasta</paramValue>
      <paramValue name="outputProteinsFile">$$tierOneRepProteinsDir$$/${ncbiTaxonId}.fasta</paramValue>
      <paramValue name="proteinIdPrefix">${ncbiTaxonId}</paramValue>
      <depends name="makeRepProteinsDataDir"/>
      <depends name="${cladeAbbrev}_makeGoodProteinsFile"/>
    </step>

  </datasetTemplate>

  <step name="makeTierTwoDir" stepClass="ReFlow::StepClasses::MakeDataDir">
    <paramValue name="dataDir">$$tierTwoDir$$</paramValue>
  </step>

  <step name="tierTwoDir_mirrorToCluster" stepClass="ReFlow::StepClasses::MirrorToComputeCluster">
    <paramValue name="fileOrDirToMirror">$$tierTwoDir$$</paramValue>
    <depends name="makeTierTwoDir"/>
  </step>

  <step name="makeFinalGoodProteinsFile" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMakeGoodProteins">
    <paramValue name="proteomesDir">$$tierOneRepProteinsDir$$</paramValue>
    <paramValue name="outputGoodProteinsFile">$$tierTwoDir$$/good.fasta</paramValue>
    <paramValue name="outputBadProteinsFile">$$tierTwoDir$$/bad.fasta</paramValue>
    <paramValue name="minLength">10</paramValue>
    <paramValue name="maxStopPercent">20</paramValue>
    <depends name="makeTierTwoDir"/>
    <dependsPattern name="*_makeRepresentativeProteinsFile"/>
  </step>

  <subgraph name="makeFinalGroups" xmlFile="makeOrthologGroups.xml">
    <paramValue name="parentDataDir">$$tierTwoDir$$</paramValue>
    <paramValue name="inputProteinFile">$$tierTwoDir$$/good.fasta</paramValue>
    <paramValue name="inputTaxaDir"></paramValue>
    <paramValue name="outputGroupsDir">$$tierTwoDir$$/groupsOutput</paramValue>
    <paramValue name="suffix"></paramValue>
    <paramValue name="useExistingSimSeqs">true</paramValue>
    <paramValue name="collapseClades">true</paramValue>
    <paramValue name="includeSingletonGroups">true</paramValue>
    <depends name="makeFinalGoodProteinsFile"/>
    <depends name="tierTwoDir_mirrorToCluster"/>
  </subgraph>

  <!-- remove prefixes -->

  <!-- split groups containing more than one protein from a given clade.  for those proteins,
       keep in the initial group the one that is closest to the central protein of the group.   put all others
       in a new group.   if that new group has more than one protein from any clades, repeat the process. -->

  <step name="mergeSecondaryProteins" stepClass="ApiCommonWorkflow::Main::WorkflowSteps::OrthomclMergeSecondaryProteins">
    <paramValue name="inputRepGroupsFile">$$tierTwoDir$$/groupsOutput/orthomclGroups.txt</paramValue>
    <paramValue name="inputTierOneGroupsDir">$$tierOneRepFirstGroupsDir$$</paramValue>
    <paramValue name="outputMergedGroupsFile">$$tierTwoDir$$/finalGroups.txt</paramValue>
    <depends name="makeFinalGroups"/>
  </step>

</workflowGraph>
